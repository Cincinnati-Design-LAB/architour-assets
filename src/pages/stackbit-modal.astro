---
import Layout from "@layouts/Layout.astro";
import { getPaginatedImages } from "@content/utils/get-images";

const imagePages = await getPaginatedImages();

const images = imagePages[0].images;
---

<Layout title="Stackbit Modal">
  <main class="p-4">
    <div class="grid grid-cols-4 gap-4" data-clearyst-images>
      {
        images.map((image) => {
          return (
            <div class="overflow-hidden hover:cursor-pointer border-4 border-transparent hover:border-blue-300 transition-all duration-300">
              <img
                src={image.thumbUrl}
                data-public-id={image.publicId}
                class="width-full transition-all duration-300 hover:scale-110"
              />
            </div>
          );
        })
      }
    </div>

    <div>
      <p>Add new file</p>
      <input type="file" id="image-file" class="hidden" />
      <button
        id="upload-trigger"
        class="inline-block py-2 px-6 bg-blue-500 text-white">Upload</button
      >
    </div>
  </main>
</Layout>

<script>
  const images = document.querySelectorAll("[data-clearyst-images] img");

  // Listen for clicks on images and send `postMessage`
  images.forEach((image) => {
    image.addEventListener("click", function () {
      const id = image.getAttribute("data-public-id");
      console.log("Clicked image", id);
      if (window.parent) {
        window.parent.postMessage(
          { type: "clearyst-cloudinary-assets", public_id: id },
          "*"
        );
      }
    });
  });

  const imageFileEl: HTMLInputElement = document.getElementById(
    "image-file"
  ) as HTMLInputElement;
  imageFileEl.addEventListener("change", async function () {
    let imageFile = (document.getElementById("image-file") as HTMLInputElement)
      .files[0];
    // console.log(imageFile);

    if (!imageFile) return;

    const fileReader = new FileReader();
    console.log(imageFile);

    fileReader.addEventListener("load", async function (event) {
      const base64Image = event.target.result;

      if (typeof base64Image !== "string") {
        console.error("base64Image is not a string");
        return;
      }

      let formData = new FormData();
      formData.append("imageUrl", base64Image);
      const res = await fetch("/api/upload", {
        method: "POST",
        body: formData,
      });

      const response = await res.json();

      if (!response.success) {
        console.error("Something went wrong uploading the image");
        return;
      }

      if (!response.public_id) {
        console.error("No public_id returned from upload");
        return;
      }

      console.log("Image uploaded", response.public_id);
      if (window.parent) {
        window.parent.postMessage(
          { type: "clearyst-cloudinary-assets", public_id: response.public_id },
          "*"
        );
      }
    });

    fileReader.readAsDataURL(imageFile);
  });

  // Upload file control
  let uploadTrigger = document.getElementById("upload-trigger");
  uploadTrigger.addEventListener("click", async function () {
    imageFileEl.click();
  });
</script>
