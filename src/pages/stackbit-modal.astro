---
import Layout from "@layouts/Layout.astro";
import { getPaginatedImages } from "@content/utils/get-images";

const imagePages = await getPaginatedImages();

const images = imagePages[0].images;
---

<Layout title="Stackbit Modal">
  <main class="p-4">
    <div class="grid grid-cols-4 gap-4" data-clearyst-images>
      {
        images.map((image) => {
          return (
            <div class="overflow-hidden hover:cursor-pointer border-4 border-transparent hover:border-blue-300 transition-all duration-300">
              <img
                src={image.thumbUrl}
                class="width-full transition-all duration-300 hover:scale-110"
              />
            </div>
          );
        })
      }
    </div>

    <div>
      <p>Add new file</p>
      <input type="file" id="image-file" />
      <button id="upload-trigger">Upload</button>
    </div>
  </main>
</Layout>

<script>
  import { log } from "astro/dist/core/logger/core";

  const images = document.querySelectorAll("[data-clearyst-images] img");

  // Listen for clicks on images and send `postMessage`
  images.forEach((image) => {
    image.addEventListener("click", function () {
      console.log("Clicked image", this.src);
      if (window.parent) {
        window.parent.postMessage(
          {
            type: "clearyst-cloudinary-assets",
            imageUrl: this.src,
          },
          "*"
        );
      }
    });
  });

  // Upload file control
  let uploadTrigger = document.getElementById("upload-trigger");
  uploadTrigger.addEventListener("click", async function () {
    // console.log("Clicked upload");
    // if (window.parent) {
    //   window.parent.postMessage(
    //     {
    //       type: "clearyst-cloudinary-assets",
    //       imageUrl: this.src,
    //     },
    //     "*"
    //   );
    // }
    let imageFile = (document.getElementById("image-file") as HTMLInputElement)
      .files[0];
    // console.log(imageFile);

    if (!imageFile) return;

    let formData = new FormData();
    formData.append("imageUrl", imageFile);
    const response = await fetch("/api/upload", {
      method: "POST",
      body: formData,
    });
    console.log({ response });
  });
</script>
